{
  "contractName": "DutchXCompleteModule",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "dx",
          "type": "address"
        },
        {
          "name": "tokens",
          "type": "address[]"
        },
        {
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dutchXAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_masterCopy",
          "type": "address"
        }
      ],
      "name": "changeMasterCopy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "dx",
          "type": "address"
        }
      ],
      "name": "changeDXProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhitelistedToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "executeWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305184198146100d5578063051b6a261461024e5780632f2f3be1146102a5578063481c6a75146103af5780636d70f7ae146104065780637de7edef1461046f5780638ab1d681146104c057806392a96ab4146105115780639870d7fe14610562578063a3f4df7e146105b3578063ab37f48614610643578063ac8a584a146106ac578063e43252d7146106fd578063ffa1ad741461074e575b600080fd5b3480156100e157600080fd5b5061024c600480360360608110156100f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561013557600080fd5b82018360208201111561014757600080fd5b8035906020019184602083028401116401000000008311171561016957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101c957600080fd5b8201836020820111156101db57600080fd5b803590602001918460208302840111640100000000831117156101fd57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506107de565b005b34801561025a57600080fd5b50610263610ac0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b157600080fd5b50610395600480360360608110156102c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561030f57600080fd5b82018360208201111561032157600080fd5b8035906020019184600183028401116401000000008311171561034357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ae6565b604051808215151515815260200191505060405180910390f35b3480156103bb57600080fd5b506103c46118db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041257600080fd5b506104556004803603602081101561042957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611901565b604051808215151515815260200191505060405180910390f35b34801561047b57600080fd5b506104be6004803603602081101561049257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611921565b005b3480156104cc57600080fd5b5061050f600480360360208110156104e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b1a565b005b34801561051d57600080fd5b506105606004803603602081101561053457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d21565b005b34801561056e57600080fd5b506105b16004803603602081101561058557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ef5565b005b3480156105bf57600080fd5b506105c86121a2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106085780820151818401526020810190506105ed565b50505050905090810190601f1680156106355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561064f57600080fd5b506106926004803603602081101561066657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121db565b604051808215151515815260200191505060405180910390f35b3480156106b857600080fd5b506106fb600480360360208110156106cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121fb565b005b34801561070957600080fd5b5061074c6004803603602081101561072057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612402565b005b34801561075a57600080fd5b506107636126af565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107a3578082015181840152602081019050610788565b50505050905090810190601f1680156107d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107e66126e8565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008090505b825181101561095d576000838281518110151561084657fe5b906020019060200201519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c696420746f6b656e2070726f76696465640000000000000000000081525060200191505060405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050808060010191505061082d565b5060008090505b8151811015610aba576000828281518110151561097d57fe5b906020019060200201519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a54576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f496e76616c6964206f70657261746f7220616464726573732070726f7669646581526020017f640000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550508080600101915050610964565b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610bd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f4d6574686f642063616e206f6e6c792062652063616c6c656420627920616e2081526020017f6f70657261746f7200000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480610c775750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f44657374696e6174696f6e2061646472657373206973206e6f7420616c6c6f7781526020017f656400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000602085015190508273ffffffffffffffffffffffffffffffffffffffff1663d0e30db090507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515610e3c57600086141515610e3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f457468207472616e73616374696f6e73206f6e6c7920616c6c6f77656420666f81526020017f72207772617070696e672045544800000000000000000000000000000000000081525060400191505060405180910390fd5b5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b390507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610fb857600060248601519050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610fb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f5370656e646572206d757374206265207468652044757463685820436f6e747281526020017f616374000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b506116d9565b8173ffffffffffffffffffffffffffffffffffffffff166347e7ef2490507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561113057600060248601519050600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561112a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001807f4f6e6c792077686974656c697374656420746f6b656e732063616e206265206481526020017f65706f736974206f6e207468652044757463685800000000000000000000000081525060400191505060405180910390fd5b506116d8565b8173ffffffffffffffffffffffffffffffffffffffff166359f96ae590507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415611306576000806024870151915060448701519050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680156112655750600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15156112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f4f6e6c792077686974656c697374656420746f6b656e732063616e206265207381526020017f6f6c64000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b50506116d7565b8173ffffffffffffffffffffffffffffffffffffffff16635e7f22c290507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156114dc576000806024870151915060448701519050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16801561143b5750600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15156114d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f4f6e6c792077686974656c697374656420746f6b656e732063616e206265206281526020017f6f7567687400000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b50506116d6565b8173ffffffffffffffffffffffffffffffffffffffff16637895dd2190507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806115dd57508173ffffffffffffffffffffffffffffffffffffffff1663d3cc8d1c90507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061166157508273ffffffffffffffffffffffffffffffffffffffff1663d0e30db090507c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15156116d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f46756e6374696f6e206e6f7420616c6c6f77656400000000000000000000000081525060200191505060405180910390fd5b5b5b5b5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663468721a788888860006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200183600281111561179357fe5b60ff168152602001828103825284818151815260200191508051906020019080838360005b838110156117d35780820151818401526020810190506117b8565b50505050905090810190601f1680156118005780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561182257600080fd5b505af1158015611836573d6000803e3d6000fd5b505050506040513d602081101561184c57600080fd5b810190808051906020019092919050505015156118d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f436f756c64206e6f742065786563757465207472616e73616374696f6e00000081525060200191505060405180910390fd5b5050509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a0c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d206d81526020017f616e61676572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611ad7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f496e76616c6964206d617374657220636f707920616464726573732070726f7681526020017f696465640000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d206d81526020017f616e61676572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611cc6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f546f6b656e206973206e6f742077686974656c6973746564000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d206d81526020017f616e61676572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611eb1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420616464726573732070726f7669646564000000000000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fe0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d206d81526020017f616e61676572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612085576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420616464726573732070726f7669646564000000000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4f70657261746f7220697320616c72656164792077686974656c69737465640081525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6040805190810160405280601681526020017f44757463685820436f6d706c657465204d6f64756c650000000000000000000081525081565b60036020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d206d81526020017f616e61676572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156123a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4f70657261746f72206973206e6f742077686974656c6973746564000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156124ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d206d81526020017f616e61676572000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c696420746f6b656e2070726f76696465640000000000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546f6b656e20697320616c72656164792077686974656c69737465640000000081525060200191505060405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6040805190810160405280600581526020017f302e302e3200000000000000000000000000000000000000000000000000000081525081565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156127ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d616e616765722068617320616c7265616479206265656e207365740000000081525060200191505060405180910390fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fea165627a7a72305820c2664a0206aa472b7a93de0988d69c51f08c0fcd21323cd345b3c801c093f7b60029",
  "sourceMap": "381:5090:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:5090:1;;;;;;;",
  "deployedSourceMap": "381:5090:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:579:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:579:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;604:579:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;604:579:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;604:579:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;604:579:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;604:579:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;604:579:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;604:579:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;604:579:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;604:579:0;;;;;;;;;;;;;;;;;;254:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;978:4491:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;978:4491:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;978:4491:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;978:4491:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;978:4491:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;978:4491:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;978:4491:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:28:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;270:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;410:43:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;410:43:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;410:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:257:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:257:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;626:257:16;;;;;;;;;;;;;;;;;;;;;;1711:192:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1711:192:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1711:192:0;;;;;;;;;;;;;;;;;;;;;;2782:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2782:159:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2782:159:0;;;;;;;;;;;;;;;;;;;;;;2041:251;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2041:251:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2041:251:0;;;;;;;;;;;;;;;;;;;;;;438:54:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;438:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;355:51:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:51:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;355:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2435:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2435:183:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2435:183:0;;;;;;;;;;;;;;;;;;;;;;1318:253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1318:253:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1318:253:0;;;;;;;;;;;;;;;;;;;;;;498:40:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;498:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;498:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:579:0;707:12;:10;:12::i;:::-;743:2;727:13;;:18;;;;;;;;;;;;;;;;;;759:9;771:1;759:13;;754:200;778:6;:13;774:1;:17;754:200;;;810:13;826:6;833:1;826:9;;;;;;;;;;;;;;;;;;810:25;;872:1;855:19;;:5;:19;;;;847:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:4;913:18;:25;932:5;913:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;754:200;793:3;;;;;;;754:200;;;;966:9;978:1;966:13;;961:218;985:9;:16;981:1;:20;961:218;;;1020:16;1039:9;1049:1;1039:12;;;;;;;;;;;;;;;;;;1020:31;;1091:1;1071:22;;:8;:22;;;;1063:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:4;1143:10;:20;1154:8;1143:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;961:218;1003:3;;;;;;;961:218;;;;604:579;;;:::o;254:28::-;;;;;;;;;;;;;:::o;978:4491:1:-;1084:4;1147:35;1192:27;1327:10;:22;1338:10;1327:22;;;;;;;;;;;;;;;;;;;;;;;;;1319:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:13;;;;;;;;;;;1492:19;;:2;:19;;;:45;;;;1515:18;:22;1534:2;1515:22;;;;;;;;;;;;;;;;;;;;;;;;;1492:45;1484:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:25;1770:4;1764;1760:15;1754:22;1732:44;;1983:14;:22;;;:31;;;;1961:53;;;:18;:53;;;;;1957:152;;;2046:1;2037:5;:10;2029:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:152;2353:14;:22;;;:31;;;;2331:53;;;:18;:53;;;;2327:3012;;;2400:12;2548:4;2542;2538:15;2532:22;2521:33;;2807:13;;;;;;;;;;;2787:33;;2795:7;2787:33;;;2779:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2327:3012;;;;2903:11;:19;;;:28;;;;2881:50;;;:18;:50;;;;2877:2462;;;3134:17;3292:4;3286;3282:15;3276:22;3260:38;;3334:18;:41;3361:12;3334:41;;;;;;;;;;;;;;;;;;;;;;;;;3325:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2877:2462;;;;3475:11;:25;;;:34;;;;3453:56;;;:18;:56;;;;3449:1890;;;3806:14;3834:13;3985:4;3979;3975:15;3969:22;3956:35;;4036:4;4030;4026:15;4020:22;4008:34;;4078:18;:38;4105:9;4078:38;;;;;;;;;;;;;;;;;;;;;;;;;:79;;;;;4120:18;:37;4147:8;4120:37;;;;;;;;;;;;;;;;;;;;;;;;;4078:79;4069:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3449:1890;;;;;4240:11;:24;;;:33;;;;4218:55;;;:18;:55;;;;4214:1125;;;4569:14;4597:13;4748:4;4742;4738:15;4732:22;4719:35;;4799:4;4793;4789:15;4783:22;4771:34;;4841:18;:38;4868:9;4841:38;;;;;;;;;;;;;;;;;;;;;;;;;:79;;;;;4883:18;:37;4910:8;4883:37;;;;;;;;;;;;;;;;;;;;;;;;;4841:79;4832:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:1125;;;;;5103:11;:50;;;:59;;;;5081:81;;;:18;:81;;;;:165;;;;5188:11;:49;;;:58;;;;5166:80;;;:18;:80;;;;5081:165;:222;;;;5272:14;:22;;;:31;;;;5250:53;;;:18;:53;;;;5081:222;5073:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:1125;3449:1890;2877:2462;2327:3012;5357:7;;;;;;;;;;;:33;;;5391:2;5395:5;5402:4;5408:19;5357:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5357:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5357:71:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5357:71:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5357:71:1;;;;;;;;;;;;;;;;5349:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;978:4491;;;;;;;;:::o;270:28:11:-;;;;;;;;;;;;;:::o;410:43:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;626:257:16:-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:1:16;776:25;;:11;:25;;;;768:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:11;852:10;;:24;;;;;;;;;;;;;;;;;;626:257;:::o;1711:192:0:-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:18:0;:25;1822:5;1803:25;;;;;;;;;;;;;;;;;;;;;;;;;1795:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:5;1865:18;:25;1884:5;1865:25;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1711:192;:::o;2782:159::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2879:1:0;2865:16;;:2;:16;;;;2857:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2934:2;2918:13;;:18;;;;;;;;;;;;;;;;;;2782:159;:::o;2041:251::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:1:0;2128:22;;:8;:22;;;;2120:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:10;:20;2207:8;2196:20;;;;;;;;;;;;;;;;;;;;;;;;;2195:21;2187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2283:4;2260:10;:20;2271:8;2260:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2041:251;:::o;438:54:1:-;;;;;;;;;;;;;;;;;;;;:::o;355:51:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;2435:183::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:10:0;:20;2536:8;2525:20;;;;;;;;;;;;;;;;;;;;;;;;;2517:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2608:5;2585:10;:20;2596:8;2585:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2435:183;:::o;1318:253::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:1:0;1405:19;;:5;:19;;;;1397:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1468:18;:25;1487:5;1468:25;;;;;;;;;;;;;;;;;;;;;;;;;1467:26;1459:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:4;1534:18;:25;1553:5;1534:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1318:253;:::o;498:40:1:-;;;;;;;;;;;;;;;;;;;;:::o;442:309:11:-;664:1;636:30;;644:7;;;;;;;;;;;636:30;;;628:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:10;709:7;;:35;;;;;;;;;;;;;;;;;;442:309::o",
  "source": "pragma solidity 0.5.0;\nimport \"gnosis-safe/contracts/common/Enum.sol\";\nimport \"./DutchXBaseModule.sol\";\nimport \"./DutchXInterface.sol\";\nimport \"./DutchXTokenInterface.sol\";\n\n\n/// @title DutchX Module - Allows to execute transactions to DutchX contract for whitelisted token pairs without confirmations and deposit tokens in the DutchX.\n/// @author Denis Granha - <denis@gnosis.pm>\ncontract DutchXCompleteModule is DutchXBaseModule {\n\n    string public constant NAME = \"DutchX Complete Module\";\n    string public constant VERSION = \"0.0.2\";\n\n    /// @dev Returns if Safe transaction is to DutchX contract and with whitelisted tokens.\n    /// @param to Dutch X address or Whitelisted token (only for approve operations for DX).\n    /// @param value Not checked.\n    /// @param data Allowed operations (postSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit).\n    /// @return Returns if transaction can be executed.\n    function executeWhitelisted(address to, uint256 value, bytes memory data)\n        public\n        returns (bool)\n    {\n\n        // Load allowed method interfaces\n        DutchXTokenInterface tokenInterface;\n        DutchXInterface dxInterface;\n\n        // Only Safe owners are allowed to execute transactions to whitelisted accounts.\n        require(isOperator[msg.sender], \"Method can only be called by an operator\");\n\n        // Only DutchX Proxy and Whitelisted tokens are allowed as destination\n        require(to == dutchXAddress || isWhitelistedToken[to], \"Destination address is not allowed\");\n\n        // Decode data\n        bytes4 functionIdentifier;\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            functionIdentifier := mload(add(data, 0x20))\n        }\n\n        // Only approve tokens function and deposit (in the case of WETH) is allowed against token contracts, and DutchX proxy must be the spender (for approve)\n        if (functionIdentifier != tokenInterface.deposit.selector){\n            require(value == 0, \"Eth transactions only allowed for wrapping ETH\");\n        }\n\n        // Only these functions:\n        // PostSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit\n        // Are allowed for the Dutch X contract\n        if (functionIdentifier == tokenInterface.approve.selector) {\n            uint spender;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                spender := mload(add(data, 0x24))\n            }\n\n            // TODO we need abi.decodeWithSelector\n            // approve(address spender, uint256 amount) we skip the amount\n            // (address spender) = abi.decode(dataParams, (address));\n\n            require(address(spender) == dutchXAddress, \"Spender must be the DutchX Contract\");\n        } else if (functionIdentifier == dxInterface.deposit.selector) {\n            // TODO we need abi.decodeWithSelector\n            // deposit(address token, uint256 amount) we skip the amount\n            // (address token) = abi.decode(data, (address));\n\n            uint depositToken;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                depositToken := mload(add(data, 0x24))\n            }\n            require (isWhitelistedToken[address(depositToken)], \"Only whitelisted tokens can be deposit on the DutchX\");\n        } else if (functionIdentifier == dxInterface.postSellOrder.selector) {\n            // TODO we need abi.decodeWithSelector\n            // postSellOrder(address sellToken, address buyToken, uint256 auctionIndex, uint256 amount) we skip auctionIndex and amount\n            // (address sellToken, address buyToken) = abi.decode(data, (address, address));\n\n            uint sellToken;\n            uint buyToken;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                sellToken := mload(add(data, 0x24))\n                buyToken := mload(add(data, 0x44))\n            }\n            require (isWhitelistedToken[address(sellToken)] && isWhitelistedToken[address(buyToken)], \"Only whitelisted tokens can be sold\");\n        } else if (functionIdentifier == dxInterface.postBuyOrder.selector) {\n            // TODO we need abi.decodeWithSelector\n            // postBuyOrder(address sellToken, address buyToken, uint256 auctionIndex, uint256 amount) we skip auctionIndex and amount\n            // (address sellToken, address buyToken) = abi.decode(data, (address, address));\n\n            uint sellToken;\n            uint buyToken;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                sellToken := mload(add(data, 0x24))\n                buyToken := mload(add(data, 0x44))\n            }\n            require (isWhitelistedToken[address(sellToken)] && isWhitelistedToken[address(buyToken)], \"Only whitelisted tokens can be bought\");\n        } else {\n            // Other functions different than claim and deposit are not allowed\n            require(functionIdentifier == dxInterface.claimTokensFromSeveralAuctionsAsSeller.selector || functionIdentifier == dxInterface.claimTokensFromSeveralAuctionsAsBuyer.selector || functionIdentifier == tokenInterface.deposit.selector, \"Function not allowed\");\n        }\n\n        require(manager.execTransactionFromModule(to, value, data, Enum.Operation.Call), \"Could not execute transaction\");\n    }\n}\n",
  "sourcePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXCompleteModule.sol",
  "ast": {
    "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXCompleteModule.sol",
    "exportedSymbols": {
      "DutchXCompleteModule": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 240,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "gnosis-safe/contracts/common/Enum.sol",
        "file": "gnosis-safe/contracts/common/Enum.sol",
        "id": 241,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 3562,
        "src": "23:47:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXBaseModule.sol",
        "file": "./DutchXBaseModule.sol",
        "id": 242,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 239,
        "src": "71:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXInterface.sol",
        "file": "./DutchXInterface.sol",
        "id": 243,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 505,
        "src": "104:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXTokenInterface.sol",
        "file": "./DutchXTokenInterface.sol",
        "id": 244,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 702,
        "src": "136:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 245,
              "name": "DutchXBaseModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 238,
              "src": "414:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DutchXBaseModule_$238",
                "typeString": "contract DutchXBaseModule"
              }
            },
            "id": 246,
            "nodeType": "InheritanceSpecifier",
            "src": "414:16:1"
          }
        ],
        "contractDependencies": [
          238,
          2787,
          3597,
          3639
        ],
        "contractKind": "contract",
        "documentation": "@title DutchX Module - Allows to execute transactions to DutchX contract for whitelisted token pairs without confirmations and deposit tokens in the DutchX.\n @author Denis Granha - <denis@gnosis.pm>",
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          238,
          2787,
          3597,
          3639
        ],
        "name": "DutchXCompleteModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 249,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "438:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 247,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "438:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "44757463685820436f6d706c657465204d6f64756c65",
              "id": 248,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "468:24:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_107cfefc7cd2f1de7fc2c9507debbab51e1b4330131c6becd8c159bc76b67990",
                "typeString": "literal_string \"DutchX Complete Module\""
              },
              "value": "DutchX Complete Module"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 252,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "498:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 250,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "498:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e32",
              "id": 251,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "531:7:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b30367effb941b728181f67f3bd24a38a4fff408ee7fb3b074425c9fb5e9be74",
                "typeString": "literal_string \"0.0.2\""
              },
              "value": "0.0.2"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "1094:4375:1",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "name": "tokenInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "1147:35:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                        "typeString": "contract DutchXTokenInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 263,
                        "name": "DutchXTokenInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 701,
                        "src": "1147:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                          "typeString": "contract DutchXTokenInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 265,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1147:35:1"
                },
                {
                  "assignments": [
                    267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 267,
                      "name": "dxInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "1192:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXInterface_$504",
                        "typeString": "contract DutchXInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 266,
                        "name": "DutchXInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 504,
                        "src": "1192:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXInterface_$504",
                          "typeString": "contract DutchXInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 268,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1192:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1327:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 271,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3975,
                            "src": "1338:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1338:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1327:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6574686f642063616e206f6e6c792062652063616c6c656420627920616e206f70657261746f72",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1351:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        },
                        "value": "Method can only be called by an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3978,
                        3979
                      ],
                      "referencedDeclaration": 3979,
                      "src": "1319:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:75:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "1492:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 279,
                            "name": "dutchXAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1498:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1492:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "isWhitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1515:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 283,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 282,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "1534:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1515:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1492:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44657374696e6174696f6e2061646472657373206973206e6f7420616c6c6f776564",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1539:36:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        },
                        "value": "Destination address is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3978,
                        3979
                      ],
                      "referencedDeclaration": 3979,
                      "src": "1484:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:92:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:92:1"
                },
                {
                  "assignments": [
                    289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 289,
                      "name": "functionIdentifier",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "1610:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1610:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1610:25:1"
                },
                {
                  "externalReferences": [
                    {
                      "functionIdentifier": {
                        "declaration": 289,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1732:18:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 258,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1764:4:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 291,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    functionIdentifier := mload(add(data, 0x20))\n}",
                  "src": "1709:250:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 292,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 289,
                      "src": "1961:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 293,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "1983:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 697,
                        "src": "1983:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1983:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1961:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 305,
                  "nodeType": "IfStatement",
                  "src": "1957:152:1",
                  "trueBody": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "2015:94:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 298,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "2037:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2046:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2037:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "457468207472616e73616374696f6e73206f6e6c7920616c6c6f77656420666f72207772617070696e6720455448",
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2049:48:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              },
                              "value": "Eth transactions only allowed for wrapping ETH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              }
                            ],
                            "id": 297,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3978,
                              3979
                            ],
                            "referencedDeclaration": 3979,
                            "src": "2029:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2029:69:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "2029:69:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 306,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 289,
                      "src": "2331:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "2353:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "2353:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2353:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2331:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "functionIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "2881:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 326,
                            "name": "dxInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "2903:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DutchXInterface_$504",
                              "typeString": "contract DutchXInterface"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 450,
                          "src": "2903:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2903:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2881:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "functionIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "3453:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 345,
                              "name": "dxInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3475:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                "typeString": "contract DutchXInterface"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "postSellOrder",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 461,
                            "src": "3475:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256) external"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3475:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3453:56:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 372,
                            "name": "functionIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "4218:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 373,
                                "name": "dxInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 267,
                                "src": "4240:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                  "typeString": "contract DutchXInterface"
                                }
                              },
                              "id": 374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "postBuyOrder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 472,
                              "src": "4240:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256,uint256) external"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4240:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4218:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 421,
                          "nodeType": "Block",
                          "src": "4979:360:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 417,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 411,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 405,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 401,
                                          "name": "functionIdentifier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 289,
                                          "src": "5081:18:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 402,
                                              "name": "dxInterface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 267,
                                              "src": "5103:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                                "typeString": "contract DutchXInterface"
                                              }
                                            },
                                            "id": 403,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "claimTokensFromSeveralAuctionsAsSeller",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 500,
                                            "src": "5103:50:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                              "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                            }
                                          },
                                          "id": 404,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5103:59:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "5081:81:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 410,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 406,
                                          "name": "functionIdentifier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 289,
                                          "src": "5166:18:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 407,
                                              "name": "dxInterface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 267,
                                              "src": "5188:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                                "typeString": "contract DutchXInterface"
                                              }
                                            },
                                            "id": 408,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "claimTokensFromSeveralAuctionsAsBuyer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 486,
                                            "src": "5188:49:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                              "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                            }
                                          },
                                          "id": 409,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5188:58:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "5166:80:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "5081:165:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 412,
                                        "name": "functionIdentifier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 289,
                                        "src": "5250:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 413,
                                            "name": "tokenInterface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 264,
                                            "src": "5272:14:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                                              "typeString": "contract DutchXTokenInterface"
                                            }
                                          },
                                          "id": 414,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "deposit",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 697,
                                          "src": "5272:22:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                            "typeString": "function () payable external"
                                          }
                                        },
                                        "id": 415,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "5272:31:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "5250:53:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5081:222:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "46756e6374696f6e206e6f7420616c6c6f776564",
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5305:22:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                      "typeString": "literal_string \"Function not allowed\""
                                    },
                                    "value": "Function not allowed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                      "typeString": "literal_string \"Function not allowed\""
                                    }
                                  ],
                                  "id": 400,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3978,
                                    3979
                                  ],
                                  "referencedDeclaration": 3979,
                                  "src": "5073:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5073:255:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 420,
                              "nodeType": "ExpressionStatement",
                              "src": "5073:255:1"
                            }
                          ]
                        },
                        "id": 422,
                        "nodeType": "IfStatement",
                        "src": "4214:1125:1",
                        "trueBody": {
                          "id": 399,
                          "nodeType": "Block",
                          "src": "4275:698:1",
                          "statements": [
                            {
                              "assignments": [
                                378
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 378,
                                  "name": "sellToken",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 399,
                                  "src": "4569:14:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 377,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4569:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 379,
                              "initialValue": null,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4569:14:1"
                            },
                            {
                              "assignments": [
                                381
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 381,
                                  "name": "buyToken",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 399,
                                  "src": "4597:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 380,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4597:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 382,
                              "initialValue": null,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4597:13:1"
                            },
                            {
                              "externalReferences": [
                                {
                                  "sellToken": {
                                    "declaration": 378,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4719:9:1",
                                    "valueSize": 1
                                  }
                                },
                                {
                                  "data": {
                                    "declaration": 258,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4742:4:1",
                                    "valueSize": 1
                                  }
                                },
                                {
                                  "buyToken": {
                                    "declaration": 381,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4771:8:1",
                                    "valueSize": 1
                                  }
                                },
                                {
                                  "data": {
                                    "declaration": 258,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4793:4:1",
                                    "valueSize": 1
                                  }
                                }
                              ],
                              "id": 383,
                              "nodeType": "InlineAssembly",
                              "operations": "{\n    sellToken := mload(add(data, 0x24))\n    buyToken := mload(add(data, 0x44))\n}",
                              "src": "4692:147:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 385,
                                        "name": "isWhitelistedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "4841:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 389,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 387,
                                            "name": "sellToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 378,
                                            "src": "4868:9:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 386,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4860:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 388,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4860:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4841:38:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 390,
                                        "name": "isWhitelistedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "4883:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 394,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 392,
                                            "name": "buyToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 381,
                                            "src": "4910:8:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 391,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4902:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 393,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4902:17:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4883:37:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "4841:79:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e20626520626f75676874",
                                    "id": 396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4922:39:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e43dfa99ceda36878968d47df13247ff59f724fd66fc3b1d001a8f3acd171861",
                                      "typeString": "literal_string \"Only whitelisted tokens can be bought\""
                                    },
                                    "value": "Only whitelisted tokens can be bought"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e43dfa99ceda36878968d47df13247ff59f724fd66fc3b1d001a8f3acd171861",
                                      "typeString": "literal_string \"Only whitelisted tokens can be bought\""
                                    }
                                  ],
                                  "id": 384,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3978,
                                    3979
                                  ],
                                  "referencedDeclaration": 3979,
                                  "src": "4832:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4832:130:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 398,
                              "nodeType": "ExpressionStatement",
                              "src": "4832:130:1"
                            }
                          ]
                        }
                      },
                      "id": 423,
                      "nodeType": "IfStatement",
                      "src": "3449:1890:1",
                      "trueBody": {
                        "id": 371,
                        "nodeType": "Block",
                        "src": "3511:697:1",
                        "statements": [
                          {
                            "assignments": [
                              350
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 350,
                                "name": "sellToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 371,
                                "src": "3806:14:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 349,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3806:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 351,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3806:14:1"
                          },
                          {
                            "assignments": [
                              353
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 353,
                                "name": "buyToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 371,
                                "src": "3834:13:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 352,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3834:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 354,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3834:13:1"
                          },
                          {
                            "externalReferences": [
                              {
                                "sellToken": {
                                  "declaration": 350,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "3956:9:1",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 258,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "3979:4:1",
                                  "valueSize": 1
                                }
                              },
                              {
                                "buyToken": {
                                  "declaration": 353,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4008:8:1",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 258,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4030:4:1",
                                  "valueSize": 1
                                }
                              }
                            ],
                            "id": 355,
                            "nodeType": "InlineAssembly",
                            "operations": "{\n    sellToken := mload(add(data, 0x24))\n    buyToken := mload(add(data, 0x44))\n}",
                            "src": "3929:147:1"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 357,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4078:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 361,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 359,
                                          "name": "sellToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 350,
                                          "src": "4105:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 358,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4097:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4097:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4078:38:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 362,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4120:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 366,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 364,
                                          "name": "buyToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 353,
                                          "src": "4147:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 363,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4139:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 365,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4139:17:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4120:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4078:79:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e20626520736f6c64",
                                  "id": 368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4159:37:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  },
                                  "value": "Only whitelisted tokens can be sold"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  }
                                ],
                                "id": 356,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  3978,
                                  3979
                                ],
                                "referencedDeclaration": 3979,
                                "src": "4069:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4069:128:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 370,
                            "nodeType": "ExpressionStatement",
                            "src": "4069:128:1"
                          }
                        ]
                      }
                    },
                    "id": 424,
                    "nodeType": "IfStatement",
                    "src": "2877:2462:1",
                    "trueBody": {
                      "id": 343,
                      "nodeType": "Block",
                      "src": "2933:510:1",
                      "statements": [
                        {
                          "assignments": [
                            331
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 331,
                              "name": "depositToken",
                              "nodeType": "VariableDeclaration",
                              "scope": 343,
                              "src": "3134:17:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 330,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3134:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 332,
                          "initialValue": null,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3134:17:1"
                        },
                        {
                          "externalReferences": [
                            {
                              "depositToken": {
                                "declaration": 331,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3260:12:1",
                                "valueSize": 1
                              }
                            },
                            {
                              "data": {
                                "declaration": 258,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3286:4:1",
                                "valueSize": 1
                              }
                            }
                          ],
                          "id": 333,
                          "nodeType": "InlineAssembly",
                          "operations": "{\n    depositToken := mload(add(data, 0x24))\n}",
                          "src": "3233:99:1"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 335,
                                  "name": "isWhitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "3334:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 339,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 337,
                                      "name": "depositToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 331,
                                      "src": "3361:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3353:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3353:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3334:41:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e206265206465706f736974206f6e2074686520447574636858",
                                "id": 340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3377:54:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                },
                                "value": "Only whitelisted tokens can be deposit on the DutchX"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                }
                              ],
                              "id": 334,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                3978,
                                3979
                              ],
                              "referencedDeclaration": 3979,
                              "src": "3325:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3325:107:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 342,
                          "nodeType": "ExpressionStatement",
                          "src": "3325:107:1"
                        }
                      ]
                    }
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "2327:3012:1",
                  "trueBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "2386:485:1",
                    "statements": [
                      {
                        "assignments": [
                          312
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 312,
                            "name": "spender",
                            "nodeType": "VariableDeclaration",
                            "scope": 324,
                            "src": "2400:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 311,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2400:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 313,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2400:12:1"
                      },
                      {
                        "externalReferences": [
                          {
                            "spender": {
                              "declaration": 312,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2521:7:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "data": {
                              "declaration": 258,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2542:4:1",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 314,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    spender := mload(add(data, 0x24))\n}",
                        "src": "2494:292:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 317,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 312,
                                    "src": "2795:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2787:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2787:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 319,
                                "name": "dutchXAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "2807:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2787:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5370656e646572206d757374206265207468652044757463685820436f6e7472616374",
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2822:37:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              },
                              "value": "Spender must be the DutchX Contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              }
                            ],
                            "id": 315,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3978,
                              3979
                            ],
                            "referencedDeclaration": 3979,
                            "src": "2779:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2779:81:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "2779:81:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 429,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "5391:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 430,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "5395:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 431,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "5402:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 432,
                                "name": "Enum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3561,
                                "src": "5408:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enum_$3561_$",
                                  "typeString": "type(contract Enum)"
                                }
                              },
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3560,
                              "src": "5408:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Operation_$3560_$",
                                "typeString": "type(enum Enum.Operation)"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5408:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Operation_$3560",
                              "typeString": "enum Enum.Operation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_Operation_$3560",
                              "typeString": "enum Enum.Operation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 427,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2750,
                            "src": "5357:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ModuleManager_$3092",
                              "typeString": "contract ModuleManager"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "execTransactionFromModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3018,
                          "src": "5357:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$3560_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5357:71:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c64206e6f742065786563757465207472616e73616374696f6e",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5430:31:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        },
                        "value": "Could not execute transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3978,
                        3979
                      ],
                      "referencedDeclaration": 3979,
                      "src": "5349:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5349:113:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "5349:113:1"
                }
              ]
            },
            "documentation": "@dev Returns if Safe transaction is to DutchX contract and with whitelisted tokens.\n @param to Dutch X address or Whitelisted token (only for approve operations for DX).\n @param value Not checked.\n @param data Allowed operations (postSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit).\n @return Returns if transaction can be executed.",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1006:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1018:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1033:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:46:1"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1084:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1083:6:1"
            },
            "scope": 441,
            "src": "978:4491:1",
            "stateMutability": "nonpayable",
            "superFunction": 237,
            "visibility": "public"
          }
        ],
        "scope": 442,
        "src": "381:5090:1"
      }
    ],
    "src": "0:5472:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXCompleteModule.sol",
    "exportedSymbols": {
      "DutchXCompleteModule": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 240,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "gnosis-safe/contracts/common/Enum.sol",
        "file": "gnosis-safe/contracts/common/Enum.sol",
        "id": 241,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 3562,
        "src": "23:47:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXBaseModule.sol",
        "file": "./DutchXBaseModule.sol",
        "id": 242,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 239,
        "src": "71:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXInterface.sol",
        "file": "./DutchXInterface.sol",
        "id": 243,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 505,
        "src": "104:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/giacomo/Projects/Gnosis/safe-modules/contracts/DutchXTokenInterface.sol",
        "file": "./DutchXTokenInterface.sol",
        "id": 244,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 702,
        "src": "136:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 245,
              "name": "DutchXBaseModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 238,
              "src": "414:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DutchXBaseModule_$238",
                "typeString": "contract DutchXBaseModule"
              }
            },
            "id": 246,
            "nodeType": "InheritanceSpecifier",
            "src": "414:16:1"
          }
        ],
        "contractDependencies": [
          238,
          2787,
          3597,
          3639
        ],
        "contractKind": "contract",
        "documentation": "@title DutchX Module - Allows to execute transactions to DutchX contract for whitelisted token pairs without confirmations and deposit tokens in the DutchX.\n @author Denis Granha - <denis@gnosis.pm>",
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          238,
          2787,
          3597,
          3639
        ],
        "name": "DutchXCompleteModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 249,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "438:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 247,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "438:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "44757463685820436f6d706c657465204d6f64756c65",
              "id": 248,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "468:24:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_107cfefc7cd2f1de7fc2c9507debbab51e1b4330131c6becd8c159bc76b67990",
                "typeString": "literal_string \"DutchX Complete Module\""
              },
              "value": "DutchX Complete Module"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 252,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "498:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 250,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "498:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e32",
              "id": 251,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "531:7:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b30367effb941b728181f67f3bd24a38a4fff408ee7fb3b074425c9fb5e9be74",
                "typeString": "literal_string \"0.0.2\""
              },
              "value": "0.0.2"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "1094:4375:1",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "name": "tokenInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "1147:35:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                        "typeString": "contract DutchXTokenInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 263,
                        "name": "DutchXTokenInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 701,
                        "src": "1147:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                          "typeString": "contract DutchXTokenInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 265,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1147:35:1"
                },
                {
                  "assignments": [
                    267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 267,
                      "name": "dxInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "1192:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXInterface_$504",
                        "typeString": "contract DutchXInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 266,
                        "name": "DutchXInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 504,
                        "src": "1192:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXInterface_$504",
                          "typeString": "contract DutchXInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 268,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1192:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1327:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 271,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3975,
                            "src": "1338:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1338:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1327:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6574686f642063616e206f6e6c792062652063616c6c656420627920616e206f70657261746f72",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1351:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        },
                        "value": "Method can only be called by an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3978,
                        3979
                      ],
                      "referencedDeclaration": 3979,
                      "src": "1319:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:75:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "1492:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 279,
                            "name": "dutchXAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1498:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1492:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "isWhitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1515:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 283,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 282,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "1534:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1515:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1492:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44657374696e6174696f6e2061646472657373206973206e6f7420616c6c6f776564",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1539:36:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        },
                        "value": "Destination address is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3978,
                        3979
                      ],
                      "referencedDeclaration": 3979,
                      "src": "1484:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:92:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:92:1"
                },
                {
                  "assignments": [
                    289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 289,
                      "name": "functionIdentifier",
                      "nodeType": "VariableDeclaration",
                      "scope": 439,
                      "src": "1610:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1610:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1610:25:1"
                },
                {
                  "externalReferences": [
                    {
                      "functionIdentifier": {
                        "declaration": 289,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1732:18:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 258,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1764:4:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 291,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    functionIdentifier := mload(add(data, 0x20))\n}",
                  "src": "1709:250:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 292,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 289,
                      "src": "1961:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 293,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "1983:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 697,
                        "src": "1983:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1983:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1961:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 305,
                  "nodeType": "IfStatement",
                  "src": "1957:152:1",
                  "trueBody": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "2015:94:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 298,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "2037:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2046:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2037:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "457468207472616e73616374696f6e73206f6e6c7920616c6c6f77656420666f72207772617070696e6720455448",
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2049:48:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              },
                              "value": "Eth transactions only allowed for wrapping ETH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              }
                            ],
                            "id": 297,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3978,
                              3979
                            ],
                            "referencedDeclaration": 3979,
                            "src": "2029:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2029:69:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "2029:69:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 306,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 289,
                      "src": "2331:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "2353:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "2353:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2353:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2331:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "functionIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "2881:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 326,
                            "name": "dxInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "2903:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DutchXInterface_$504",
                              "typeString": "contract DutchXInterface"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 450,
                          "src": "2903:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2903:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2881:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "functionIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "3453:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 345,
                              "name": "dxInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3475:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                "typeString": "contract DutchXInterface"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "postSellOrder",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 461,
                            "src": "3475:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256) external"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3475:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3453:56:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 372,
                            "name": "functionIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "4218:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 373,
                                "name": "dxInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 267,
                                "src": "4240:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                  "typeString": "contract DutchXInterface"
                                }
                              },
                              "id": 374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "postBuyOrder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 472,
                              "src": "4240:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256,uint256) external"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4240:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4218:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 421,
                          "nodeType": "Block",
                          "src": "4979:360:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 417,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 411,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 405,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 401,
                                          "name": "functionIdentifier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 289,
                                          "src": "5081:18:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 402,
                                              "name": "dxInterface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 267,
                                              "src": "5103:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                                "typeString": "contract DutchXInterface"
                                              }
                                            },
                                            "id": 403,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "claimTokensFromSeveralAuctionsAsSeller",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 500,
                                            "src": "5103:50:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                              "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                            }
                                          },
                                          "id": 404,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5103:59:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "5081:81:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 410,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 406,
                                          "name": "functionIdentifier",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 289,
                                          "src": "5166:18:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 407,
                                              "name": "dxInterface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 267,
                                              "src": "5188:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DutchXInterface_$504",
                                                "typeString": "contract DutchXInterface"
                                              }
                                            },
                                            "id": 408,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "claimTokensFromSeveralAuctionsAsBuyer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 486,
                                            "src": "5188:49:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                              "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                            }
                                          },
                                          "id": 409,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5188:58:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "5166:80:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "5081:165:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 412,
                                        "name": "functionIdentifier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 289,
                                        "src": "5250:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 413,
                                            "name": "tokenInterface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 264,
                                            "src": "5272:14:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DutchXTokenInterface_$701",
                                              "typeString": "contract DutchXTokenInterface"
                                            }
                                          },
                                          "id": 414,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "deposit",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 697,
                                          "src": "5272:22:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                            "typeString": "function () payable external"
                                          }
                                        },
                                        "id": 415,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "5272:31:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "5250:53:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5081:222:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "46756e6374696f6e206e6f7420616c6c6f776564",
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5305:22:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                      "typeString": "literal_string \"Function not allowed\""
                                    },
                                    "value": "Function not allowed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                      "typeString": "literal_string \"Function not allowed\""
                                    }
                                  ],
                                  "id": 400,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3978,
                                    3979
                                  ],
                                  "referencedDeclaration": 3979,
                                  "src": "5073:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5073:255:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 420,
                              "nodeType": "ExpressionStatement",
                              "src": "5073:255:1"
                            }
                          ]
                        },
                        "id": 422,
                        "nodeType": "IfStatement",
                        "src": "4214:1125:1",
                        "trueBody": {
                          "id": 399,
                          "nodeType": "Block",
                          "src": "4275:698:1",
                          "statements": [
                            {
                              "assignments": [
                                378
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 378,
                                  "name": "sellToken",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 399,
                                  "src": "4569:14:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 377,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4569:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 379,
                              "initialValue": null,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4569:14:1"
                            },
                            {
                              "assignments": [
                                381
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 381,
                                  "name": "buyToken",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 399,
                                  "src": "4597:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 380,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4597:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 382,
                              "initialValue": null,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4597:13:1"
                            },
                            {
                              "externalReferences": [
                                {
                                  "sellToken": {
                                    "declaration": 378,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4719:9:1",
                                    "valueSize": 1
                                  }
                                },
                                {
                                  "data": {
                                    "declaration": 258,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4742:4:1",
                                    "valueSize": 1
                                  }
                                },
                                {
                                  "buyToken": {
                                    "declaration": 381,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4771:8:1",
                                    "valueSize": 1
                                  }
                                },
                                {
                                  "data": {
                                    "declaration": 258,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "4793:4:1",
                                    "valueSize": 1
                                  }
                                }
                              ],
                              "id": 383,
                              "nodeType": "InlineAssembly",
                              "operations": "{\n    sellToken := mload(add(data, 0x24))\n    buyToken := mload(add(data, 0x44))\n}",
                              "src": "4692:147:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 385,
                                        "name": "isWhitelistedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "4841:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 389,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 387,
                                            "name": "sellToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 378,
                                            "src": "4868:9:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 386,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4860:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 388,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4860:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4841:38:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 390,
                                        "name": "isWhitelistedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "4883:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 394,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 392,
                                            "name": "buyToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 381,
                                            "src": "4910:8:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 391,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4902:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 393,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4902:17:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4883:37:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "4841:79:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e20626520626f75676874",
                                    "id": 396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4922:39:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e43dfa99ceda36878968d47df13247ff59f724fd66fc3b1d001a8f3acd171861",
                                      "typeString": "literal_string \"Only whitelisted tokens can be bought\""
                                    },
                                    "value": "Only whitelisted tokens can be bought"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e43dfa99ceda36878968d47df13247ff59f724fd66fc3b1d001a8f3acd171861",
                                      "typeString": "literal_string \"Only whitelisted tokens can be bought\""
                                    }
                                  ],
                                  "id": 384,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3978,
                                    3979
                                  ],
                                  "referencedDeclaration": 3979,
                                  "src": "4832:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4832:130:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 398,
                              "nodeType": "ExpressionStatement",
                              "src": "4832:130:1"
                            }
                          ]
                        }
                      },
                      "id": 423,
                      "nodeType": "IfStatement",
                      "src": "3449:1890:1",
                      "trueBody": {
                        "id": 371,
                        "nodeType": "Block",
                        "src": "3511:697:1",
                        "statements": [
                          {
                            "assignments": [
                              350
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 350,
                                "name": "sellToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 371,
                                "src": "3806:14:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 349,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3806:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 351,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3806:14:1"
                          },
                          {
                            "assignments": [
                              353
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 353,
                                "name": "buyToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 371,
                                "src": "3834:13:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 352,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3834:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 354,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3834:13:1"
                          },
                          {
                            "externalReferences": [
                              {
                                "sellToken": {
                                  "declaration": 350,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "3956:9:1",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 258,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "3979:4:1",
                                  "valueSize": 1
                                }
                              },
                              {
                                "buyToken": {
                                  "declaration": 353,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4008:8:1",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 258,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4030:4:1",
                                  "valueSize": 1
                                }
                              }
                            ],
                            "id": 355,
                            "nodeType": "InlineAssembly",
                            "operations": "{\n    sellToken := mload(add(data, 0x24))\n    buyToken := mload(add(data, 0x44))\n}",
                            "src": "3929:147:1"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 357,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4078:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 361,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 359,
                                          "name": "sellToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 350,
                                          "src": "4105:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 358,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4097:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4097:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4078:38:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 362,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4120:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 366,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 364,
                                          "name": "buyToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 353,
                                          "src": "4147:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 363,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4139:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 365,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4139:17:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4120:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4078:79:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e20626520736f6c64",
                                  "id": 368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4159:37:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  },
                                  "value": "Only whitelisted tokens can be sold"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  }
                                ],
                                "id": 356,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  3978,
                                  3979
                                ],
                                "referencedDeclaration": 3979,
                                "src": "4069:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4069:128:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 370,
                            "nodeType": "ExpressionStatement",
                            "src": "4069:128:1"
                          }
                        ]
                      }
                    },
                    "id": 424,
                    "nodeType": "IfStatement",
                    "src": "2877:2462:1",
                    "trueBody": {
                      "id": 343,
                      "nodeType": "Block",
                      "src": "2933:510:1",
                      "statements": [
                        {
                          "assignments": [
                            331
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 331,
                              "name": "depositToken",
                              "nodeType": "VariableDeclaration",
                              "scope": 343,
                              "src": "3134:17:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 330,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3134:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 332,
                          "initialValue": null,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3134:17:1"
                        },
                        {
                          "externalReferences": [
                            {
                              "depositToken": {
                                "declaration": 331,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3260:12:1",
                                "valueSize": 1
                              }
                            },
                            {
                              "data": {
                                "declaration": 258,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3286:4:1",
                                "valueSize": 1
                              }
                            }
                          ],
                          "id": 333,
                          "nodeType": "InlineAssembly",
                          "operations": "{\n    depositToken := mload(add(data, 0x24))\n}",
                          "src": "3233:99:1"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 335,
                                  "name": "isWhitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "3334:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 339,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 337,
                                      "name": "depositToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 331,
                                      "src": "3361:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3353:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3353:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3334:41:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e206265206465706f736974206f6e2074686520447574636858",
                                "id": 340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3377:54:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                },
                                "value": "Only whitelisted tokens can be deposit on the DutchX"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                }
                              ],
                              "id": 334,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                3978,
                                3979
                              ],
                              "referencedDeclaration": 3979,
                              "src": "3325:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3325:107:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 342,
                          "nodeType": "ExpressionStatement",
                          "src": "3325:107:1"
                        }
                      ]
                    }
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "2327:3012:1",
                  "trueBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "2386:485:1",
                    "statements": [
                      {
                        "assignments": [
                          312
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 312,
                            "name": "spender",
                            "nodeType": "VariableDeclaration",
                            "scope": 324,
                            "src": "2400:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 311,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2400:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 313,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2400:12:1"
                      },
                      {
                        "externalReferences": [
                          {
                            "spender": {
                              "declaration": 312,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2521:7:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "data": {
                              "declaration": 258,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2542:4:1",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 314,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    spender := mload(add(data, 0x24))\n}",
                        "src": "2494:292:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 317,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 312,
                                    "src": "2795:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2787:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2787:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 319,
                                "name": "dutchXAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "2807:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2787:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5370656e646572206d757374206265207468652044757463685820436f6e7472616374",
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2822:37:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              },
                              "value": "Spender must be the DutchX Contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              }
                            ],
                            "id": 315,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3978,
                              3979
                            ],
                            "referencedDeclaration": 3979,
                            "src": "2779:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2779:81:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "2779:81:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 429,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "5391:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 430,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "5395:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 431,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "5402:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 432,
                                "name": "Enum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3561,
                                "src": "5408:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enum_$3561_$",
                                  "typeString": "type(contract Enum)"
                                }
                              },
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3560,
                              "src": "5408:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Operation_$3560_$",
                                "typeString": "type(enum Enum.Operation)"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5408:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Operation_$3560",
                              "typeString": "enum Enum.Operation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_Operation_$3560",
                              "typeString": "enum Enum.Operation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 427,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2750,
                            "src": "5357:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ModuleManager_$3092",
                              "typeString": "contract ModuleManager"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "execTransactionFromModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3018,
                          "src": "5357:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$3560_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5357:71:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c64206e6f742065786563757465207472616e73616374696f6e",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5430:31:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        },
                        "value": "Could not execute transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3978,
                        3979
                      ],
                      "referencedDeclaration": 3979,
                      "src": "5349:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5349:113:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "5349:113:1"
                }
              ]
            },
            "documentation": "@dev Returns if Safe transaction is to DutchX contract and with whitelisted tokens.\n @param to Dutch X address or Whitelisted token (only for approve operations for DX).\n @param value Not checked.\n @param data Allowed operations (postSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit).\n @return Returns if transaction can be executed.",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1006:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1018:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1033:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:46:1"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "1084:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1083:6:1"
            },
            "scope": 441,
            "src": "978:4491:1",
            "stateMutability": "nonpayable",
            "superFunction": 237,
            "visibility": "public"
          }
        ],
        "scope": 442,
        "src": "381:5090:1"
      }
    ],
    "src": "0:5472:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-16T09:14:26.133Z",
  "devdoc": {
    "author": "Denis Granha - <denis@gnosis.pm>",
    "methods": {
      "addOperator(address)": {
        "details": "Allows to add operator to whitelist. This can only be done via a Safe transaction.",
        "params": {
          "operator": "ethereum address."
        }
      },
      "addToWhitelist(address)": {
        "details": "Allows to add token to whitelist. This can only be done via a Safe transaction.",
        "params": {
          "token": "ERC20 token address."
        }
      },
      "changeDXProxy(address)": {
        "details": "Allows to change DutchX Proxy contract address. This can only be done via a Safe transaction.",
        "params": {
          "dx": "New proxy contract address for DutchX."
        }
      },
      "changeMasterCopy(address)": {
        "details": "Allows to upgrade the contract. This can only be done via a Safe transaction.",
        "params": {
          "_masterCopy": "New contract address."
        }
      },
      "executeWhitelisted(address,uint256,bytes)": {
        "details": "Returns if Safe transaction is to DutchX contract and with whitelisted tokens.",
        "params": {
          "data": "Allowed operations (postSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit).",
          "to": "Dutch X address or Whitelisted token (only for approve operations for DX).",
          "value": "Not checked."
        },
        "return": "Returns if transaction can be executed."
      },
      "removeFromWhitelist(address)": {
        "details": "Allows to remove token from whitelist. This can only be done via a Safe transaction.",
        "params": {
          "token": "ERC20 token address."
        }
      },
      "removeOperator(address)": {
        "details": "Allows to remove operator from whitelist. This can only be done via a Safe transaction.",
        "params": {
          "operator": "ethereum address."
        }
      },
      "setup(address,address[],address[])": {
        "details": "Setup function sets initial storage of contract.",
        "params": {
          "dx": "DutchX Proxy Address.",
          "tokens": "List of whitelisted tokens."
        }
      }
    },
    "title": "DutchX Module - Allows to execute transactions to DutchX contract for whitelisted token pairs without confirmations and deposit tokens in the DutchX."
  },
  "userdoc": {
    "methods": {}
  }
}