{
  "contractName": "DutchXSellerModule",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "dutchXAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_masterCopy",
          "type": "address"
        }
      ],
      "name": "changeMasterCopy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "dx",
          "type": "address"
        }
      ],
      "name": "changeDXProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhitelistedToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "dx",
          "type": "address"
        },
        {
          "name": "tokens",
          "type": "address[]"
        },
        {
          "name": "operators",
          "type": "address[]"
        },
        {
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "executeWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "488:4307:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;488:4307:3;;;;;;;",
  "deployedSourceMap": "488:4307:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:28:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:3712:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1081:3712:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1081:3712:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1081:3712:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1081:3712:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1081:3712:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1081:3712:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:28:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;270:28:11;;;;;;;;;;;;;;;;;;;;;;;;;;;410:43:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;410:43:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;410:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:257:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:257:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;626:257:16;;;;;;;;;;;;;;;;;;;;;;2083:192:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2083:192:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2083:192:0;;;;;;;;;;;;;;;;;;;;;;3154:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3154:159:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3154:159:0;;;;;;;;;;;;;;;;;;;;;;2413:251;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2413:251:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2413:251:0;;;;;;;;;;;;;;;;;;;;;;543:52:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;543:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;543:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;355:51:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:51:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;355:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2807:183:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2807:183:0;;;;;;;;;;;;;;;;;;;;;;1690:253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1690:253:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1690:253:0;;;;;;;;;;;;;;;;;;;;;;739:816;;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:816:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;739:816:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;739:816:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;739:816:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;739:816:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;739:816:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;739:816:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;739:816:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;739:816:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;739:816:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:40:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;601:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;601:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:28:0;;;;;;;;;;;;;:::o;1081:3712:3:-;1187:4;1250:35;1295:27;1430:10;:22;1441:10;1430:22;;;;;;;;;;;;;;;;;;;;;;;;;1422:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1601:13;;;;;;;;;;;1595:19;;:2;:19;;;:45;;;;1618:18;:22;1637:2;1618:22;;;;;;;;;;;;;;;;;;;;;;;;;1595:45;1587:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:25;1873:4;1867;1863:15;1857:22;1835:44;;2086:14;:22;;;:31;;;;2064:53;;;:18;:53;;;;;2060:152;;;2149:1;2140:5;:10;2132:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2060:152;2442:14;:22;;;:31;;;;2420:53;;;:18;:53;;;;2416:2247;;;2489:12;2637:4;2631;2627:15;2621:22;2610:33;;2896:13;;;;;;;;;;;2876:33;;2884:7;2876:33;;;2868:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2416:2247;;;;2992:11;:19;;;:28;;;;2970:50;;;:18;:50;;;;2966:1697;;;3223:17;3381:4;3375;3371:15;3365:22;3349:38;;3423:18;:41;3450:12;3423:41;;;;;;;;;;;;;;;;;;;;;;;;;3414:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2966:1697;;;;3564:11;:25;;;:34;;;;3542:56;;;:18;:56;;;;3538:1125;;;3895:14;3923:13;4074:4;4068;4064:15;4058:22;4045:35;;4125:4;4119;4115:15;4109:22;4097:34;;4167:18;:38;4194:9;4167:38;;;;;;;;;;;;;;;;;;;;;;;;;:79;;;;;4209:18;:37;4236:8;4209:37;;;;;;;;;;;;;;;;;;;;;;;;;4167:79;4158:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:1125;;;;;4427:11;:50;;;:59;;;;4405:81;;;:18;:81;;;;:165;;;;4512:11;:49;;;:58;;;;4490:80;;;:18;:80;;;;4405:165;:222;;;;4596:14;:22;;;:31;;;;4574:53;;;:18;:53;;;;4405:222;4397:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:1125;2966:1697;2416:2247;4681:7;;;;;;;;;;;:33;;;4715:2;4719:5;4726:4;4732:19;4681:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4681:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4681:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4681:71:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4681:71:3;;;;;;;;;;;;;;;;4673:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:3712;;;;;;;;:::o;270:28:11:-;;;;;;;;;;;;;:::o;410:43:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;626:257:16:-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:1:16;776:25;;:11;:25;;;;768:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:11;852:10;;:24;;;;;;;;;;;;;;;;;;626:257;:::o;2083:192:0:-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:18:0;:25;2194:5;2175:25;;;;;;;;;;;;;;;;;;;;;;;;;2167:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2265:5;2237:18;:25;2256:5;2237:25;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;2083:192;:::o;3154:159::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:1:0;3237:16;;:2;:16;;;;3229:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3306:2;3290:13;;:18;;;;;;;;;;;;;;;;;;3154:159;:::o;2413:251::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:1:0;2500:22;;:8;:22;;;;2492:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:10;:20;2579:8;2568:20;;;;;;;;;;;;;;;;;;;;;;;;;2567:21;2559:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:4;2632:10;:20;2643:8;2632:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2413:251;:::o;543:52:3:-;;;;;;;;;;;;;;;;;;;;:::o;355:51:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;2807:183::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:10:0;:20;2908:8;2897:20;;;;;;;;;;;;;;;;;;;;;;;;;2889:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2980:5;2957:10;:20;2968:8;2957:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2807:183;:::o;1690:253::-;367:7:11;;;;;;;;;;;345:30;;:10;:30;;;337:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1794:1:0;1777:19;;:5;:19;;;;1769:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1840:18;:25;1859:5;1840:25;;;;;;;;;;;;;;;;;;;;;;;;;1839:26;1831:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:4;1906:18;:25;1925:5;1906:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1690:253;:::o;739:816::-;904:1;876:30;;884:7;;;;;;;;;;;876:30;;;868:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:1;951:22;;:8;:22;;;947:144;;;1008:10;984:7;;:35;;;;;;;;;;;;;;;;;;947:144;;;1073:8;1049:7;;:33;;;;;;;;;;;;;;;;;;947:144;1115:2;1099:13;;:18;;;;;;;;;;;;;;;;;;1131:9;1143:1;1131:13;;1126:200;1150:6;:13;1146:1;:17;1126:200;;;1182:13;1198:6;1205:1;1198:9;;;;;;;;;;;;;;;;;;1182:25;;1244:1;1227:19;;:5;:19;;;;1219:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:4;1285:18;:25;1304:5;1285:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1126:200;1165:3;;;;;;;1126:200;;;;1338:9;1350:1;1338:13;;1333:218;1357:9;:16;1353:1;:20;1333:218;;;1392:16;1411:9;1421:1;1411:12;;;;;;;;;;;;;;;;;;1392:31;;1463:1;1443:22;;:8;:22;;;;1435:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:4;1515:10;:20;1526:8;1515:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1333:218;1375:3;;;;;;;1333:218;;;;739:816;;;;:::o;601:40:3:-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.0;\nimport \"gnosis-safe/contracts/common/Enum.sol\";\nimport \"./DutchXBaseModule.sol\";\nimport \"./DutchXInterface.sol\";\nimport \"./DutchXTokenInterface.sol\";\n\n\n/// @title DutchX Module - Allows to execute transactions to DutchX contract for whitelisted token pairs without confirmations and deposit tokens in the DutchX.\n//  differs from the Complete module in the allowed functions, it doesn't allow to perform buy operations.\n/// @author Denis Granha - <denis@gnosis.pm>\ncontract DutchXSellerModule is DutchXBaseModule {\n\n    string public constant NAME = \"DutchX Seller Module\";\n    string public constant VERSION = \"0.0.2\";\n\n    /// @dev Returns if Safe transaction is to DutchX contract and with whitelisted tokens.\n    /// @param to Dutch X address or Whitelisted token (only for approve operations for DX).\n    /// @param value Not checked.\n    /// @param data Allowed operations (postSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit).\n    /// @return Returns if transaction can be executed.\n    function executeWhitelisted(address to, uint256 value, bytes memory data)\n        public\n        returns (bool)\n    {\n\n        // Load allowed method interfaces\n        DutchXTokenInterface tokenInterface;\n        DutchXInterface dxInterface;\n\n        // Only Safe owners are allowed to execute transactions to whitelisted accounts.\n        require(isOperator[msg.sender], \"Method can only be called by an operator\");\n\n        // Only DutchX Proxy and Whitelisted tokens are allowed as destination\n        require(to == dutchXAddress || isWhitelistedToken[to], \"Destination address is not allowed\");\n\n        // Decode data\n        bytes4 functionIdentifier;\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            functionIdentifier := mload(add(data, 0x20))\n        }\n\n        // Only approve tokens function and deposit (in the case of WETH) is allowed against token contracts, and DutchX proxy must be the spender (for approve)\n        if (functionIdentifier != tokenInterface.deposit.selector){\n            require(value == 0, \"Eth transactions only allowed for wrapping ETH\");\n        }\n\n        // Only these functions:\n        // PostSellOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit\n        // Are allowed for the Dutch X contract\n        if (functionIdentifier == tokenInterface.approve.selector) {\n            uint spender;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                spender := mload(add(data, 0x24))\n            }\n\n            // TODO we need abi.decodeWithSelector\n            // approve(address spender, uint256 amount) we skip the amount\n            // (address spender) = abi.decode(dataParams, (address));\n\n            require(address(spender) == dutchXAddress, \"Spender must be the DutchX Contract\");\n        } else if (functionIdentifier == dxInterface.deposit.selector) {\n            // TODO we need abi.decodeWithSelector\n            // deposit(address token, uint256 amount) we skip the amount\n            // (address token) = abi.decode(data, (address));\n\n            uint depositToken;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                depositToken := mload(add(data, 0x24))\n            }\n            require (isWhitelistedToken[address(depositToken)], \"Only whitelisted tokens can be deposit on the DutchX\");\n        } else if (functionIdentifier == dxInterface.postSellOrder.selector) {\n            // TODO we need abi.decodeWithSelector\n            // postSellOrder(address sellToken, address buyToken, uint256 auctionIndex, uint256 amount) we skip auctionIndex and amount\n            // (address sellToken, address buyToken) = abi.decode(data, (address, address));\n\n            uint sellToken;\n            uint buyToken;\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                sellToken := mload(add(data, 0x24))\n                buyToken := mload(add(data, 0x44))\n            }\n            require (isWhitelistedToken[address(sellToken)] && isWhitelistedToken[address(buyToken)], \"Only whitelisted tokens can be sold\");\n        } else {\n            // Other functions different than claim and deposit are not allowed\n            require(functionIdentifier == dxInterface.claimTokensFromSeveralAuctionsAsSeller.selector || functionIdentifier == dxInterface.claimTokensFromSeveralAuctionsAsBuyer.selector || functionIdentifier == tokenInterface.deposit.selector, \"Function not allowed\");\n        }\n\n        require(manager.execTransactionFromModule(to, value, data, Enum.Operation.Call), \"Could not execute transaction\");\n    }\n}\n",
  "sourcePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXSellerModule.sol",
  "ast": {
    "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXSellerModule.sol",
    "exportedSymbols": {
      "DutchXSellerModule": [
        709
      ]
    },
    "id": 710,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 537,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "gnosis-safe/contracts/common/Enum.sol",
        "file": "gnosis-safe/contracts/common/Enum.sol",
        "id": 538,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 3593,
        "src": "23:47:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXBaseModule.sol",
        "file": "./DutchXBaseModule.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 270,
        "src": "71:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXInterface.sol",
        "file": "./DutchXInterface.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 536,
        "src": "104:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXTokenInterface.sol",
        "file": "./DutchXTokenInterface.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 733,
        "src": "136:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 542,
              "name": "DutchXBaseModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 269,
              "src": "519:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DutchXBaseModule_$269",
                "typeString": "contract DutchXBaseModule"
              }
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "519:16:3"
          }
        ],
        "contractDependencies": [
          269,
          2818,
          3628,
          3670
        ],
        "contractKind": "contract",
        "documentation": "@author Denis Granha - <denis@gnosis.pm>",
        "fullyImplemented": true,
        "id": 709,
        "linearizedBaseContracts": [
          709,
          269,
          2818,
          3628,
          3670
        ],
        "name": "DutchXSellerModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 546,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 709,
            "src": "543:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 544,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "543:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4475746368582053656c6c6572204d6f64756c65",
              "id": 545,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "573:22:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9b1b151cbae947072c65d3bbb481f2df35e74d3300db6519796bfca08ed0b35d",
                "typeString": "literal_string \"DutchX Seller Module\""
              },
              "value": "DutchX Seller Module"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 549,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 709,
            "src": "601:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 547,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "601:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e32",
              "id": 548,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "634:7:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b30367effb941b728181f67f3bd24a38a4fff408ee7fb3b074425c9fb5e9be74",
                "typeString": "literal_string \"0.0.2\""
              },
              "value": "0.0.2"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 707,
              "nodeType": "Block",
              "src": "1197:3596:3",
              "statements": [
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "name": "tokenInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "1250:35:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                        "typeString": "contract DutchXTokenInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 560,
                        "name": "DutchXTokenInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 732,
                        "src": "1250:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                          "typeString": "contract DutchXTokenInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 562,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:35:3"
                },
                {
                  "assignments": [
                    564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 564,
                      "name": "dxInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "1295:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXInterface_$535",
                        "typeString": "contract DutchXInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 563,
                        "name": "DutchXInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 535,
                        "src": "1295:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXInterface_$535",
                          "typeString": "contract DutchXInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1295:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 567,
                          "name": "isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1430:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 570,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 568,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4006,
                            "src": "1441:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1441:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1430:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6574686f642063616e206f6e6c792062652063616c6c656420627920616e206f70657261746f72",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        },
                        "value": "Method can only be called by an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        }
                      ],
                      "id": 566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4009,
                        4010
                      ],
                      "referencedDeclaration": 4010,
                      "src": "1422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1422:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "1422:75:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 575,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "1595:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 576,
                            "name": "dutchXAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1601:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1595:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "isWhitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1618:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 579,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "1637:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1618:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1595:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44657374696e6174696f6e2061646472657373206973206e6f7420616c6c6f776564",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1642:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        },
                        "value": "Destination address is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4009,
                        4010
                      ],
                      "referencedDeclaration": 4010,
                      "src": "1587:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:92:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:92:3"
                },
                {
                  "assignments": [
                    586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 586,
                      "name": "functionIdentifier",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "1713:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1713:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 587,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1713:25:3"
                },
                {
                  "externalReferences": [
                    {
                      "functionIdentifier": {
                        "declaration": 586,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1835:18:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1867:4:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 588,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    functionIdentifier := mload(add(data, 0x20))\n}",
                  "src": "1812:250:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 589,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "2064:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "2086:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 728,
                        "src": "2086:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2086:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2064:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 602,
                  "nodeType": "IfStatement",
                  "src": "2060:152:3",
                  "trueBody": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "2118:94:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 595,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 553,
                                "src": "2140:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2149:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2140:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "457468207472616e73616374696f6e73206f6e6c7920616c6c6f77656420666f72207772617070696e6720455448",
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2152:48:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              },
                              "value": "Eth transactions only allowed for wrapping ETH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              }
                            ],
                            "id": 594,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4009,
                              4010
                            ],
                            "referencedDeclaration": 4010,
                            "src": "2132:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2132:69:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 600,
                        "nodeType": "ExpressionStatement",
                        "src": "2132:69:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 603,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "2420:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 604,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "2442:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
                        "src": "2442:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2442:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2420:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 622,
                        "name": "functionIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "2970:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 623,
                            "name": "dxInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "2992:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DutchXInterface_$535",
                              "typeString": "contract DutchXInterface"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "2992:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2992:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2970:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "functionIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "3542:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 642,
                              "name": "dxInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "3564:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DutchXInterface_$535",
                                "typeString": "contract DutchXInterface"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "postSellOrder",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 492,
                            "src": "3564:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256) external"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3564:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3542:56:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 690,
                        "nodeType": "Block",
                        "src": "4303:360:3",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 680,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 674,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 670,
                                        "name": "functionIdentifier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 586,
                                        "src": "4405:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 671,
                                            "name": "dxInterface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 564,
                                            "src": "4427:11:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DutchXInterface_$535",
                                              "typeString": "contract DutchXInterface"
                                            }
                                          },
                                          "id": 672,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "claimTokensFromSeveralAuctionsAsSeller",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 531,
                                          "src": "4427:50:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                          }
                                        },
                                        "id": 673,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "4427:59:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "4405:81:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 675,
                                        "name": "functionIdentifier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 586,
                                        "src": "4490:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 676,
                                            "name": "dxInterface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 564,
                                            "src": "4512:11:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DutchXInterface_$535",
                                              "typeString": "contract DutchXInterface"
                                            }
                                          },
                                          "id": 677,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "claimTokensFromSeveralAuctionsAsBuyer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 517,
                                          "src": "4512:49:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                          }
                                        },
                                        "id": 678,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "4512:58:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "4490:80:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "4405:165:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 681,
                                      "name": "functionIdentifier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 586,
                                      "src": "4574:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 682,
                                          "name": "tokenInterface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 561,
                                          "src": "4596:14:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                                            "typeString": "contract DutchXTokenInterface"
                                          }
                                        },
                                        "id": 683,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "deposit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 728,
                                        "src": "4596:22:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                          "typeString": "function () payable external"
                                        }
                                      },
                                      "id": 684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4596:31:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "4574:53:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4405:222:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "46756e6374696f6e206e6f7420616c6c6f776564",
                                  "id": 687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4629:22:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                    "typeString": "literal_string \"Function not allowed\""
                                  },
                                  "value": "Function not allowed"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                    "typeString": "literal_string \"Function not allowed\""
                                  }
                                ],
                                "id": 669,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4009,
                                  4010
                                ],
                                "referencedDeclaration": 4010,
                                "src": "4397:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4397:255:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 689,
                            "nodeType": "ExpressionStatement",
                            "src": "4397:255:3"
                          }
                        ]
                      },
                      "id": 691,
                      "nodeType": "IfStatement",
                      "src": "3538:1125:3",
                      "trueBody": {
                        "id": 668,
                        "nodeType": "Block",
                        "src": "3600:697:3",
                        "statements": [
                          {
                            "assignments": [
                              647
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 647,
                                "name": "sellToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 668,
                                "src": "3895:14:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 646,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3895:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 648,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3895:14:3"
                          },
                          {
                            "assignments": [
                              650
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 650,
                                "name": "buyToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 668,
                                "src": "3923:13:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 649,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3923:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 651,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3923:13:3"
                          },
                          {
                            "externalReferences": [
                              {
                                "sellToken": {
                                  "declaration": 647,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4045:9:3",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 555,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4068:4:3",
                                  "valueSize": 1
                                }
                              },
                              {
                                "buyToken": {
                                  "declaration": 650,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4097:8:3",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 555,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4119:4:3",
                                  "valueSize": 1
                                }
                              }
                            ],
                            "id": 652,
                            "nodeType": "InlineAssembly",
                            "operations": "{\n    sellToken := mload(add(data, 0x24))\n    buyToken := mload(add(data, 0x44))\n}",
                            "src": "4018:147:3"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 654,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4167:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 658,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 656,
                                          "name": "sellToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 647,
                                          "src": "4194:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 655,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4186:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4186:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4167:38:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 659,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4209:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 663,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 661,
                                          "name": "buyToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 650,
                                          "src": "4236:8:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 660,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4228:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4228:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4209:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4167:79:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e20626520736f6c64",
                                  "id": 665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4248:37:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  },
                                  "value": "Only whitelisted tokens can be sold"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  }
                                ],
                                "id": 653,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4009,
                                  4010
                                ],
                                "referencedDeclaration": 4010,
                                "src": "4158:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4158:128:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 667,
                            "nodeType": "ExpressionStatement",
                            "src": "4158:128:3"
                          }
                        ]
                      }
                    },
                    "id": 692,
                    "nodeType": "IfStatement",
                    "src": "2966:1697:3",
                    "trueBody": {
                      "id": 640,
                      "nodeType": "Block",
                      "src": "3022:510:3",
                      "statements": [
                        {
                          "assignments": [
                            628
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 628,
                              "name": "depositToken",
                              "nodeType": "VariableDeclaration",
                              "scope": 640,
                              "src": "3223:17:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 627,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3223:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 629,
                          "initialValue": null,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3223:17:3"
                        },
                        {
                          "externalReferences": [
                            {
                              "depositToken": {
                                "declaration": 628,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3349:12:3",
                                "valueSize": 1
                              }
                            },
                            {
                              "data": {
                                "declaration": 555,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3375:4:3",
                                "valueSize": 1
                              }
                            }
                          ],
                          "id": 630,
                          "nodeType": "InlineAssembly",
                          "operations": "{\n    depositToken := mload(add(data, 0x24))\n}",
                          "src": "3322:99:3"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 632,
                                  "name": "isWhitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "3423:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 636,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 634,
                                      "name": "depositToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 628,
                                      "src": "3450:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3442:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3442:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3423:41:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e206265206465706f736974206f6e2074686520447574636858",
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3466:54:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                },
                                "value": "Only whitelisted tokens can be deposit on the DutchX"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                }
                              ],
                              "id": 631,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4009,
                                4010
                              ],
                              "referencedDeclaration": 4010,
                              "src": "3414:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3414:107:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 639,
                          "nodeType": "ExpressionStatement",
                          "src": "3414:107:3"
                        }
                      ]
                    }
                  },
                  "id": 693,
                  "nodeType": "IfStatement",
                  "src": "2416:2247:3",
                  "trueBody": {
                    "id": 621,
                    "nodeType": "Block",
                    "src": "2475:485:3",
                    "statements": [
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "name": "spender",
                            "nodeType": "VariableDeclaration",
                            "scope": 621,
                            "src": "2489:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 608,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2489:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 610,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2489:12:3"
                      },
                      {
                        "externalReferences": [
                          {
                            "spender": {
                              "declaration": 609,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2610:7:3",
                              "valueSize": 1
                            }
                          },
                          {
                            "data": {
                              "declaration": 555,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2631:4:3",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 611,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    spender := mload(add(data, 0x24))\n}",
                        "src": "2583:292:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 614,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 609,
                                    "src": "2884:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2876:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2876:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 616,
                                "name": "dutchXAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "2896:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2876:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5370656e646572206d757374206265207468652044757463685820436f6e7472616374",
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2911:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              },
                              "value": "Spender must be the DutchX Contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              }
                            ],
                            "id": 612,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4009,
                              4010
                            ],
                            "referencedDeclaration": 4010,
                            "src": "2868:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2868:81:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 620,
                        "nodeType": "ExpressionStatement",
                        "src": "2868:81:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 697,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "4715:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 698,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "4719:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 699,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "4726:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 700,
                                "name": "Enum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3592,
                                "src": "4732:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enum_$3592_$",
                                  "typeString": "type(contract Enum)"
                                }
                              },
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3591,
                              "src": "4732:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Operation_$3591_$",
                                "typeString": "type(enum Enum.Operation)"
                              }
                            },
                            "id": 702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4732:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Operation_$3591",
                              "typeString": "enum Enum.Operation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_Operation_$3591",
                              "typeString": "enum Enum.Operation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 695,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2781,
                            "src": "4681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ModuleManager_$3123",
                              "typeString": "contract ModuleManager"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "execTransactionFromModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3049,
                          "src": "4681:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$3591_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4681:71:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c64206e6f742065786563757465207472616e73616374696f6e",
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4754:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        },
                        "value": "Could not execute transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4009,
                        4010
                      ],
                      "referencedDeclaration": 4010,
                      "src": "4673:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:113:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "4673:113:3"
                }
              ]
            },
            "documentation": "@dev Returns if Safe transaction is to DutchX contract and with whitelisted tokens.\n @param to Dutch X address or Whitelisted token (only for approve operations for DX).\n @param value Not checked.\n @param data Allowed operations (postSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit).\n @return Returns if transaction can be executed.",
            "id": 708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1109:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1121:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1136:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1108:46:3"
            },
            "returnParameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1187:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1186:6:3"
            },
            "scope": 709,
            "src": "1081:3712:3",
            "stateMutability": "nonpayable",
            "superFunction": 268,
            "visibility": "public"
          }
        ],
        "scope": 710,
        "src": "488:4307:3"
      }
    ],
    "src": "0:4796:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXSellerModule.sol",
    "exportedSymbols": {
      "DutchXSellerModule": [
        709
      ]
    },
    "id": 710,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 537,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "gnosis-safe/contracts/common/Enum.sol",
        "file": "gnosis-safe/contracts/common/Enum.sol",
        "id": 538,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 3593,
        "src": "23:47:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXBaseModule.sol",
        "file": "./DutchXBaseModule.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 270,
        "src": "71:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXInterface.sol",
        "file": "./DutchXInterface.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 536,
        "src": "104:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/denis/projects/gnosis/safe-modules/contracts/DutchXTokenInterface.sol",
        "file": "./DutchXTokenInterface.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 710,
        "sourceUnit": 733,
        "src": "136:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 542,
              "name": "DutchXBaseModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 269,
              "src": "519:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DutchXBaseModule_$269",
                "typeString": "contract DutchXBaseModule"
              }
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "519:16:3"
          }
        ],
        "contractDependencies": [
          269,
          2818,
          3628,
          3670
        ],
        "contractKind": "contract",
        "documentation": "@author Denis Granha - <denis@gnosis.pm>",
        "fullyImplemented": true,
        "id": 709,
        "linearizedBaseContracts": [
          709,
          269,
          2818,
          3628,
          3670
        ],
        "name": "DutchXSellerModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 546,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "scope": 709,
            "src": "543:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 544,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "543:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4475746368582053656c6c6572204d6f64756c65",
              "id": 545,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "573:22:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9b1b151cbae947072c65d3bbb481f2df35e74d3300db6519796bfca08ed0b35d",
                "typeString": "literal_string \"DutchX Seller Module\""
              },
              "value": "DutchX Seller Module"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 549,
            "name": "VERSION",
            "nodeType": "VariableDeclaration",
            "scope": 709,
            "src": "601:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 547,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "601:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e32",
              "id": 548,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "634:7:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b30367effb941b728181f67f3bd24a38a4fff408ee7fb3b074425c9fb5e9be74",
                "typeString": "literal_string \"0.0.2\""
              },
              "value": "0.0.2"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 707,
              "nodeType": "Block",
              "src": "1197:3596:3",
              "statements": [
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "name": "tokenInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "1250:35:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                        "typeString": "contract DutchXTokenInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 560,
                        "name": "DutchXTokenInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 732,
                        "src": "1250:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                          "typeString": "contract DutchXTokenInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 562,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:35:3"
                },
                {
                  "assignments": [
                    564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 564,
                      "name": "dxInterface",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "1295:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DutchXInterface_$535",
                        "typeString": "contract DutchXInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 563,
                        "name": "DutchXInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 535,
                        "src": "1295:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DutchXInterface_$535",
                          "typeString": "contract DutchXInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1295:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 567,
                          "name": "isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1430:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 570,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 568,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4006,
                            "src": "1441:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1441:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1430:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6574686f642063616e206f6e6c792062652063616c6c656420627920616e206f70657261746f72",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        },
                        "value": "Method can only be called by an operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b49fb1407dcc4b6ac4fcf75ac4cdb1ebb35fb48c42a492ebdda0c7ee57a3973f",
                          "typeString": "literal_string \"Method can only be called by an operator\""
                        }
                      ],
                      "id": 566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4009,
                        4010
                      ],
                      "referencedDeclaration": 4010,
                      "src": "1422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1422:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "1422:75:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 575,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "1595:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 576,
                            "name": "dutchXAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1601:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1595:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "isWhitelistedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1618:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 579,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "1637:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1618:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1595:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44657374696e6174696f6e2061646472657373206973206e6f7420616c6c6f776564",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1642:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        },
                        "value": "Destination address is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7f3ae170b14b6f6694256a13e1aa5f3c89f58df5800607e713d55d0d6d12fb3",
                          "typeString": "literal_string \"Destination address is not allowed\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4009,
                        4010
                      ],
                      "referencedDeclaration": 4010,
                      "src": "1587:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:92:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:92:3"
                },
                {
                  "assignments": [
                    586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 586,
                      "name": "functionIdentifier",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "1713:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1713:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 587,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1713:25:3"
                },
                {
                  "externalReferences": [
                    {
                      "functionIdentifier": {
                        "declaration": 586,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1835:18:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "data": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1867:4:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 588,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    functionIdentifier := mload(add(data, 0x20))\n}",
                  "src": "1812:250:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 589,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "2064:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "2086:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 728,
                        "src": "2086:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2086:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2064:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 602,
                  "nodeType": "IfStatement",
                  "src": "2060:152:3",
                  "trueBody": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "2118:94:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 595,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 553,
                                "src": "2140:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2149:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2140:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "457468207472616e73616374696f6e73206f6e6c7920616c6c6f77656420666f72207772617070696e6720455448",
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2152:48:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              },
                              "value": "Eth transactions only allowed for wrapping ETH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ce3b9d906b0a2578692a0559e4c1f4e96e2cf643eedfc7e63cb395846b0c4cf",
                                "typeString": "literal_string \"Eth transactions only allowed for wrapping ETH\""
                              }
                            ],
                            "id": 594,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4009,
                              4010
                            ],
                            "referencedDeclaration": 4010,
                            "src": "2132:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2132:69:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 600,
                        "nodeType": "ExpressionStatement",
                        "src": "2132:69:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 603,
                      "name": "functionIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "2420:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 604,
                          "name": "tokenInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "2442:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                            "typeString": "contract DutchXTokenInterface"
                          }
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
                        "src": "2442:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2442:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2420:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 622,
                        "name": "functionIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "2970:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 623,
                            "name": "dxInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "2992:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DutchXInterface_$535",
                              "typeString": "contract DutchXInterface"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "2992:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2992:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2970:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "functionIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "3542:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 642,
                              "name": "dxInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "3564:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DutchXInterface_$535",
                                "typeString": "contract DutchXInterface"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "postSellOrder",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 492,
                            "src": "3564:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256) external"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3564:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3542:56:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 690,
                        "nodeType": "Block",
                        "src": "4303:360:3",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 680,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 674,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 670,
                                        "name": "functionIdentifier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 586,
                                        "src": "4405:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 671,
                                            "name": "dxInterface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 564,
                                            "src": "4427:11:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DutchXInterface_$535",
                                              "typeString": "contract DutchXInterface"
                                            }
                                          },
                                          "id": 672,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "claimTokensFromSeveralAuctionsAsSeller",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 531,
                                          "src": "4427:50:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                          }
                                        },
                                        "id": 673,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "4427:59:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "4405:81:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 675,
                                        "name": "functionIdentifier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 586,
                                        "src": "4490:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 676,
                                            "name": "dxInterface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 564,
                                            "src": "4512:11:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DutchXInterface_$535",
                                              "typeString": "contract DutchXInterface"
                                            }
                                          },
                                          "id": 677,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "claimTokensFromSeveralAuctionsAsBuyer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 517,
                                          "src": "4512:49:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                                            "typeString": "function (address[] memory,address[] memory,uint256[] memory,address) external"
                                          }
                                        },
                                        "id": 678,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "4512:58:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "4490:80:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "4405:165:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 681,
                                      "name": "functionIdentifier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 586,
                                      "src": "4574:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 682,
                                          "name": "tokenInterface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 561,
                                          "src": "4596:14:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_DutchXTokenInterface_$732",
                                            "typeString": "contract DutchXTokenInterface"
                                          }
                                        },
                                        "id": 683,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "deposit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 728,
                                        "src": "4596:22:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                          "typeString": "function () payable external"
                                        }
                                      },
                                      "id": 684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4596:31:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "4574:53:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4405:222:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "46756e6374696f6e206e6f7420616c6c6f776564",
                                  "id": 687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4629:22:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                    "typeString": "literal_string \"Function not allowed\""
                                  },
                                  "value": "Function not allowed"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_fc243685271bdf41e2e1eb4320f9965c9af0396dcf7460eb1a0029031a3bd41e",
                                    "typeString": "literal_string \"Function not allowed\""
                                  }
                                ],
                                "id": 669,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4009,
                                  4010
                                ],
                                "referencedDeclaration": 4010,
                                "src": "4397:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4397:255:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 689,
                            "nodeType": "ExpressionStatement",
                            "src": "4397:255:3"
                          }
                        ]
                      },
                      "id": 691,
                      "nodeType": "IfStatement",
                      "src": "3538:1125:3",
                      "trueBody": {
                        "id": 668,
                        "nodeType": "Block",
                        "src": "3600:697:3",
                        "statements": [
                          {
                            "assignments": [
                              647
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 647,
                                "name": "sellToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 668,
                                "src": "3895:14:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 646,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3895:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 648,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3895:14:3"
                          },
                          {
                            "assignments": [
                              650
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 650,
                                "name": "buyToken",
                                "nodeType": "VariableDeclaration",
                                "scope": 668,
                                "src": "3923:13:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 649,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3923:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 651,
                            "initialValue": null,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3923:13:3"
                          },
                          {
                            "externalReferences": [
                              {
                                "sellToken": {
                                  "declaration": 647,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4045:9:3",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 555,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4068:4:3",
                                  "valueSize": 1
                                }
                              },
                              {
                                "buyToken": {
                                  "declaration": 650,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4097:8:3",
                                  "valueSize": 1
                                }
                              },
                              {
                                "data": {
                                  "declaration": 555,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4119:4:3",
                                  "valueSize": 1
                                }
                              }
                            ],
                            "id": 652,
                            "nodeType": "InlineAssembly",
                            "operations": "{\n    sellToken := mload(add(data, 0x24))\n    buyToken := mload(add(data, 0x44))\n}",
                            "src": "4018:147:3"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 654,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4167:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 658,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 656,
                                          "name": "sellToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 647,
                                          "src": "4194:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 655,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4186:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4186:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4167:38:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 659,
                                      "name": "isWhitelistedToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "4209:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 663,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 661,
                                          "name": "buyToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 650,
                                          "src": "4236:8:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 660,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4228:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": "address"
                                      },
                                      "id": 662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4228:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4209:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4167:79:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e20626520736f6c64",
                                  "id": 665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4248:37:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  },
                                  "value": "Only whitelisted tokens can be sold"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ea26097fd040746796a1ecdcc00ea6a516088affaba8beddc669f9d0a392a540",
                                    "typeString": "literal_string \"Only whitelisted tokens can be sold\""
                                  }
                                ],
                                "id": 653,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4009,
                                  4010
                                ],
                                "referencedDeclaration": 4010,
                                "src": "4158:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4158:128:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 667,
                            "nodeType": "ExpressionStatement",
                            "src": "4158:128:3"
                          }
                        ]
                      }
                    },
                    "id": 692,
                    "nodeType": "IfStatement",
                    "src": "2966:1697:3",
                    "trueBody": {
                      "id": 640,
                      "nodeType": "Block",
                      "src": "3022:510:3",
                      "statements": [
                        {
                          "assignments": [
                            628
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 628,
                              "name": "depositToken",
                              "nodeType": "VariableDeclaration",
                              "scope": 640,
                              "src": "3223:17:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 627,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3223:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 629,
                          "initialValue": null,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3223:17:3"
                        },
                        {
                          "externalReferences": [
                            {
                              "depositToken": {
                                "declaration": 628,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3349:12:3",
                                "valueSize": 1
                              }
                            },
                            {
                              "data": {
                                "declaration": 555,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3375:4:3",
                                "valueSize": 1
                              }
                            }
                          ],
                          "id": 630,
                          "nodeType": "InlineAssembly",
                          "operations": "{\n    depositToken := mload(add(data, 0x24))\n}",
                          "src": "3322:99:3"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 632,
                                  "name": "isWhitelistedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "3423:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 636,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 634,
                                      "name": "depositToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 628,
                                      "src": "3450:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3442:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3442:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3423:41:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "4f6e6c792077686974656c697374656420746f6b656e732063616e206265206465706f736974206f6e2074686520447574636858",
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3466:54:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                },
                                "value": "Only whitelisted tokens can be deposit on the DutchX"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_934a82d8aecb4e2a4e74b12678e804ce0fb24e08ae4ad5c0cd7196385fb1a816",
                                  "typeString": "literal_string \"Only whitelisted tokens can be deposit on the DutchX\""
                                }
                              ],
                              "id": 631,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4009,
                                4010
                              ],
                              "referencedDeclaration": 4010,
                              "src": "3414:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3414:107:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 639,
                          "nodeType": "ExpressionStatement",
                          "src": "3414:107:3"
                        }
                      ]
                    }
                  },
                  "id": 693,
                  "nodeType": "IfStatement",
                  "src": "2416:2247:3",
                  "trueBody": {
                    "id": 621,
                    "nodeType": "Block",
                    "src": "2475:485:3",
                    "statements": [
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "name": "spender",
                            "nodeType": "VariableDeclaration",
                            "scope": 621,
                            "src": "2489:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 608,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2489:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 610,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2489:12:3"
                      },
                      {
                        "externalReferences": [
                          {
                            "spender": {
                              "declaration": 609,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2610:7:3",
                              "valueSize": 1
                            }
                          },
                          {
                            "data": {
                              "declaration": 555,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "2631:4:3",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 611,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    spender := mload(add(data, 0x24))\n}",
                        "src": "2583:292:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 614,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 609,
                                    "src": "2884:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2876:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2876:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 616,
                                "name": "dutchXAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "2896:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2876:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5370656e646572206d757374206265207468652044757463685820436f6e7472616374",
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2911:37:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              },
                              "value": "Spender must be the DutchX Contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42555e52adf69a1890fed992c767e0090255c4f5a8052f1a69a82886b9848456",
                                "typeString": "literal_string \"Spender must be the DutchX Contract\""
                              }
                            ],
                            "id": 612,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4009,
                              4010
                            ],
                            "referencedDeclaration": 4010,
                            "src": "2868:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2868:81:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 620,
                        "nodeType": "ExpressionStatement",
                        "src": "2868:81:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 697,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "4715:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 698,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "4719:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 699,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "4726:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 700,
                                "name": "Enum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3592,
                                "src": "4732:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Enum_$3592_$",
                                  "typeString": "type(contract Enum)"
                                }
                              },
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Operation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3591,
                              "src": "4732:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Operation_$3591_$",
                                "typeString": "type(enum Enum.Operation)"
                              }
                            },
                            "id": 702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4732:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Operation_$3591",
                              "typeString": "enum Enum.Operation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_Operation_$3591",
                              "typeString": "enum Enum.Operation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 695,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2781,
                            "src": "4681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ModuleManager_$3123",
                              "typeString": "contract ModuleManager"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "execTransactionFromModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3049,
                          "src": "4681:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$3591_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4681:71:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c64206e6f742065786563757465207472616e73616374696f6e",
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4754:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        },
                        "value": "Could not execute transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a2f29e31cc28eee068c27ff93342fb8d9840dcad25c6f669ce8154844930c4",
                          "typeString": "literal_string \"Could not execute transaction\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4009,
                        4010
                      ],
                      "referencedDeclaration": 4010,
                      "src": "4673:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:113:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "4673:113:3"
                }
              ]
            },
            "documentation": "@dev Returns if Safe transaction is to DutchX contract and with whitelisted tokens.\n @param to Dutch X address or Whitelisted token (only for approve operations for DX).\n @param value Not checked.\n @param data Allowed operations (postSellOrder, postBuyOrder, claimTokensFromSeveralAuctionsAsBuyer, claimTokensFromSeveralAuctionsAsSeller, deposit).\n @return Returns if transaction can be executed.",
            "id": 708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1109:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1121:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1136:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1108:46:3"
            },
            "returnParameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "1187:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1186:6:3"
            },
            "scope": 709,
            "src": "1081:3712:3",
            "stateMutability": "nonpayable",
            "superFunction": 268,
            "visibility": "public"
          }
        ],
        "scope": 710,
        "src": "488:4307:3"
      }
    ],
    "src": "0:4796:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1550853258137": {
      "events": {},
      "links": {},
      "address": "0x61d64fdae27cac31d055353309cc44b858154d68",
      "transactionHash": "0xfd5bf9138ab87dc72560ca8f1c86d59886a92f7308d076a7002ee295129a026e"
    }
  },
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-02-22T16:34:36.671Z"
}